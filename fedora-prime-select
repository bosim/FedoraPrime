#!/usr/bin/env bash
set -e

# check if root and ask for password if not
if [[ $EUID -ne 0 ]]; then
  printf 'Script must be executed as root :\n'
  su -c $0
#  exit 1
fi

clean_files() {
  files=(
    '/etc/X11/xinit/xinitrc.d/nvidia'
    '/etc/X11/xinit/xinitrc.d/intel'
    '/etc/X11/xorg.conf.d/00-avoid-glamor.conf'
    '/etc/X11/xorg.conf.d/99-nvidia.conf'
    '/etc/X11/xorg.conf'
  )
# remove unuseful files, but check
# if they exist first
	for file in "${files[@]}"; do
		if [[ -h $file ]]; then
			printf "Deleting: %s\n" "$file"
			[ -e $file ]&& rm -f "$file"
		elif [[ -f $file ]]; then
			printf "Backing up: %s as %s\n" "$file" "$file.prime.bak"
			[ -s $file ]&& cp "$file" "$file.prime.bak"
			[ -s $file ]&& rm -f "$file"
		fi
	done
}
install_dir='/etc/fedora-prime'
nvidia32_lib_file='/etc/ld.so.conf.d/nvidia-lib32.conf'
nvidia64_lib_file='/etc/ld.so.conf.d/nvidia-lib64.conf'
conf=$1
# default fedora nvidia dirs
nv_drv_32='/usr/lib/nvidia'
nv_drv_64='/usr/lib64/nvidia'
nv_xorg_path='/usr/lib64/nvidia/xorg'
rc_dir='/etc/rc.d'
# check any custom dirs for nvidia libraries linking
if [ -s $install_dir/library.conf ]; then
	. $install_dir/library.conf
fi
# bash lines to insert in rc.local for permanent switch
bash_line="if [ -e $rc_dir/rc.nvidia ]; then
    $rc_dir/rc.nvidia &
fi
exit 0\n"

#xrandr_source_cmd=$(xrandr --listproviders| grep "Source"| head -n1| sed -n "s/^.*name://p")
#xrandr_sink_cmd=$(xrandr --listproviders| grep "Sink"| head -n1| sed -n "s/^.*name://p")
current_display=$(xrandr --current| grep "connected"| grep "[0-9]\{3,4\}[x]"| sed -n "s/\ (.*$//p")
connected_display=$(xrandr --current| grep -w "connected"| awk '{print $1}')
xrandr_outputs(){
	unset scrn
	unset def 
	if [[ $conf == nvidia ]]; then
		xrandr_source='NVIDIA-0'
		xrandr_sink='modesetting'
	else
		xrandr_source="Intel"
		xrandr_sink='Intel'
	fi
	if [[ $conf == nvidia ]]; then
		printf "xrandr --setprovideroutputsource $xrandr_sink $xrandr_source\n" > $install_dir/xinitrc.$conf
		printf "xrandr" >> $install_dir/xinitrc.$conf
	else
		printf "xrandr" > $install_dir/xinitrc.$conf	
	fi
	for all_dsp in ${connected_display[@]}; do
		output_class=$(printf "$all_dsp"|sed -n "s/[[:digit:]]\|[[:punct:]]//g;p")
		output_num=$(printf "$all_dsp"|sed -n "s/[[:alpha:]]\|[[:punct:]]//g;p")
		if [[ $conf == nvidia ]]; then
			connected_output=$output_class'-'$output_num
		else
			[[ $output_class == VGA ]]&& output_num=1
			connected_output=$output_class$output_num
		fi
		if [[ $(xrandr --current| grep "$all_dsp"| grep -o "[0-9]\{3,4\}[x]") ]]; then
			current_output=$(xrandr --current| grep "$all_dsp"| grep "[0-9]\{3,4\}[x]"| sed -n "s/\ (.*$//p")
			current_output=$( printf "$current_output"| sed -n "s/\ /\_/g;p"|tr "\n" " ")
			for scrn in ${current_output}; do
				scrn=$(printf "$scrn"| sed -n "s/\_/\ /g;p")
				if [[ $(printf "$scrn"| grep -o "primary") != '' ]]; then
					scrn=$(echo "$scrn"| sed -n "s/ \(primary\)//;s/$/ primary/p")
				fi
				mode=( ${scrn} )
				for pos in ${mode[2]}; do
					def=( $(printf "$pos"| sed -n "s/\+\|\x/\ /g;p") )
				done
				if [[ ${mode[3]} ]]; then prim="--${mode[3]}"; else prim=''; fi
				printf " --output $connected_output --mode ${def[0]}x${def[1]} --pos ${def[2]}x${def[3]} $prim" >> $install_dir/xinitrc.$conf
			done
			
		else
			printf " --output $connected_output --off" >> $install_dir/xinitrc.$conf
		fi
	done
	printf "\n" >> $install_dir/xinitrc.$conf
	chmod 755 $install_dir/xinitrc.$conf
}
go_for_nvidia(){
	clean_files
    bus_id=$(lspci | grep NVIDIA | awk '{print $1 + 0}')
    if [[ ! $(cat $install_dir/xorg.nvidia.conf|grep -o "$bus_id:0:0") ]]; then
#    	sed "s/bus_id/$bus_id/g" $install_dir/xorg.nvidia.conf > /etc/X11/xorg.conf
    	perl -ni -pe "s|bus_id|$bus_id|i" $install_dir/xorg.nvidia.conf
    fi
    if [[ ! $(cat $install_dir/xorg.nvidia.conf|grep -o "$nv_xorg_path") ]]; then
    	perl -ni -pe "s|/usr/lib64/nvidia/xorg|$nv_xorg_path|i" $install_dir/xorg.nvidia.conf
    fi
    cp -f $install_dir/xorg.nvidia.conf /etc/X11/xorg.conf
    if [[ $current_display ]]; then
    	xrandr_outputs
    fi
    ln -sf $install_dir/xinitrc.nvidia /etc/X11/xinit/xinitrc.d/nvidia
    printf "$nv_drv_64" > $nvidia64_lib_file
    if [[ -d $nv_drv_32 ]]; then
		printf "$nv_drv_32" > $nvidia32_lib_file
    fi
}
go_for_intel(){
	clean_files
	if [[ $current_display ]]; then
		xrandr_outputs
	fi
	ln -sf $install_dir/xinitrc.intel /etc/X11/xinit/xinitrc.d/intel
	cp -f $install_dir/xorg.intel.conf /etc/X11/xorg.conf
	printf '/usr/lib64' > $nvidia64_lib_file
	if [[ -f $nvidia32_lib_file ]]; then
		printf '/usr/lib' > $nvidia32_lib_file
	fi
}

case $1 in
	nvidia )
		go_for_nvidia
	;;
	intel )
		go_for_intel
	;;
	nvidiaonly )
#		conf=nvidia
#		go_for_nvidia
		if [ -s $install_dir/rc.nvidia ]; then
			if [ ! -h $rc_dir/rc.nvidia ]; then
				ln -sf $install_dir/rc.nvidia $rc_dir/rc.nvidia
			fi
			if [ -s $rc_dir/rc.local ]; then
				if [ $(cat $rc_dir/rc.local| grep -c "rc.nvidia") -eq 0 ]; then
					perl -ni -pe "s|exit 0|$bash_line|i" $rc_dir/rc.local 
				fi
				chmod 755 $rc_dir/rc.local
			else
				cp -f $install_dir/rc.local $rc_dir/
			fi
			chmod 755 $install_dir/rc.nvidia
		fi
	;;
	remove )
		if [ -h $rc_dir/rc.nvidia ]; then
			rm -f $rc_dir/rc.nvidia
			if [ -e $rc_dir/rc.local ]; then
				if [ $(cat $rc_dir/rc.local| grep -c "\n") -gt 3 ]; then
					sed -n -i "/if.*nvidia*.*/,/fi/d;p" $rc_dir/rc.local
				else
					rm -f $rc_dir/rc.local
				fi
			fi
		fi
	;;
	*|help )
		printf "Usage:\t$(basename $0) intel|nvidia|nvidiaonly|remove\n\n"
		printf "\tintel\t\tSwitch to Intel GPU.\n"
		printf "\tnvidia\t\tSwitch to Nvidia GPU.\n"
		printf "\tnvidiaonly\tSwitch to Nvidia GPU permanently.\n"
		printf "\tremove\t\tRemove permanent Nvidia switch.\n"
		printf "\thelp\t\tthis help.\n"
		printf "\n\tYou need to logout from your session after each function.\n\n"
		exit 1
	;;
#	* )
#	printf "Usage:\n  %s intel|nvidia|nvidiaonly/remove\n" 
#	exit 1
#	;;
esac

ldconfig

printf "Successfully switched to %s completed.\n" "$1"
printf "Please logout for changes to take effect.\n"
